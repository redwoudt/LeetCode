//Best Time to Buy and Sell Stock II
class Solution {
public:
    int maxProfit(vector<int> &prices) {
        //buy at min peak and sell at max peak
        //min peak: last element before going up again (ie keep going if price decreases, as soon as increase the previous is the min peak) - buy on that day and remember
        //max peak: while price increases keep going, if price decreases that previous price as max peak, if you have a purchased min peak then sell and add profit to total sum of profits
        int totalProfit = 0;
        int current = -1;
        int prev = -1;
        int buy = -1;
        int sell = -1;
        for (int i = 0; i < prices.size(); i++){
            current = prices[i];
            if (prev != -1 && current >= prev){
                //upward slope
                if (buy == -1){
                    buy = prev;
                }
            }
            else if (prev != -1 && current < prev){
                //downward slope
                if (buy != -1){
                    sell = prev;
                    totalProfit += sell - buy;
                    buy = -1;
                    sell = -1;
                }
            }
            prev = current;
        }
        //check for end condition
        if (buy != -1 && buy < current){
            totalProfit += current - buy;
        }
        
        return totalProfit;
    }
};
